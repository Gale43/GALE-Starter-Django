version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  esdata1:
    driver: local
  esdata2:
    driver: local

services:
  postgres:
    build: ./postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file: .env

  django:
    build: ./django
    volumes:
      - ./django:/app
    user: django
    depends_on:
      - postgres
      - redis
    env_file: .env
    ports:
      - "5000:5000"

{% if cookiecutter.use_elasticsearch == 'y' %}
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.2
    container_name: elasticsearch1
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    volumes:
      - esdata1:/usr/share/elasticsearch/data

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    image: docker.elastic.co/kibana/kibana:5.3.2
    environment:
      ELASTICSEARCH_URL: http://elasticsearch1:9200
    ports:
      - 5601:5601
{% endif %}

  nginx:
    build: ./nginx
    depends_on:
      - django
    ports:
      - "0.0.0.0:80:80"

  redis:
    image: redis:latest

{% if cookiecutter.use_tasks == 'y' %}
  celeryworker:
    build: ./django
    user: django
    env_file: .env
    depends_on:
     - postgres
     - redis
    command: celery -A apps.tasks worker -l INFO
{% endif %}
